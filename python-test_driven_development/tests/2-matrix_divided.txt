>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> valid_matrix = [[4, 6, 8], [2, 8, 4], [4, 4, 6]]
>>> not_nums = [[7, 5, "Python"], [3, "Error", 4], ["Test", 6, 4]]
>>> diff_size = [[4, 6, 1], [9, 5], [5]]
>>> empty_matrix = [[], [], []]
>>> none_matrix = None

>>> matrix_divided(valid_matrix, 2)
[[2.0, 3.0, 4.0], [1.0, 4.0, 2.0], [2.0, 2.0, 3.0]]

>>> matrix_divided(valid_matrix, "String")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(valid_matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(not_nums, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(diff_size, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(valid_matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
